{"ast":null,"code":"import _asyncToGenerator from \"/home/mohit/Desktop/Projects/frontend/portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { defaultModules, QUILL_CONFIG_TOKEN } from 'ngx-quill/config';\nexport * from 'ngx-quill/config';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, Inject, EventEmitter, SecurityContext, PLATFORM_ID, Directive, Input, Output, ElementRef, ChangeDetectorRef, Renderer2, NgZone, forwardRef, Component, ViewEncapsulation, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i1 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { defer, isObservable, firstValueFrom, Subscription, fromEvent } from 'rxjs';\nimport { shareReplay, mergeMap, debounceTime } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nfunction QuillEditorComponent_ng_container_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 2);\n  }\n}\n\nfunction QuillEditorComponent_ng_container_0_pre_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"pre\", 2);\n  }\n}\n\nfunction QuillEditorComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, QuillEditorComponent_ng_container_0_div_1_Template, 1, 0, \"div\", 1);\n    i0.ɵɵtemplate(2, QuillEditorComponent_ng_container_0_pre_2_Template, 1, 0, \"pre\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.preserve);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.preserve);\n  }\n}\n\nfunction QuillEditorComponent_ng_container_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 2);\n  }\n}\n\nfunction QuillEditorComponent_ng_container_2_pre_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"pre\", 2);\n  }\n}\n\nfunction QuillEditorComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, QuillEditorComponent_ng_container_2_div_1_Template, 1, 0, \"div\", 1);\n    i0.ɵɵtemplate(2, QuillEditorComponent_ng_container_2_pre_2_Template, 1, 0, \"pre\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.preserve);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.preserve);\n  }\n}\n\nconst _c0 = [[[\"\", \"quill-editor-toolbar\", \"\"]]];\nconst _c1 = [\"[quill-editor-toolbar]\"];\n\nfunction QuillViewComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 1);\n  }\n}\n\nfunction QuillViewComponent_pre_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"pre\", 1);\n  }\n}\n\nconst getFormat = (format, configFormat) => {\n  const passedFormat = format || configFormat;\n  return passedFormat || 'html';\n};\n\nclass QuillService {\n  constructor(injector, config) {\n    var _this = this;\n\n    this.config = config;\n    this.quill$ = defer( /*#__PURE__*/_asyncToGenerator(function* () {\n      if (!_this.Quill) {\n        // Quill adds events listeners on import https://github.com/quilljs/quill/blob/develop/core/emitter.js#L8\n        // We'd want to use the unpatched `addEventListener` method to have all event callbacks to be run outside of zone.\n        // We don't know yet if the `zone.js` is used or not, just save the value to restore it back further.\n        const maybePatchedAddEventListener = _this.document.addEventListener; // There're 2 types of Angular applications:\n        // 1) zone-full (by default)\n        // 2) zone-less\n        // The developer can avoid importing the `zone.js` package and tells Angular that he/she is responsible for running\n        // the change detection by himself. This is done by \"nooping\" the zone through `CompilerOptions` when bootstrapping\n        // the root module. We fallback to `document.addEventListener` if `__zone_symbol__addEventListener` is not defined,\n        // this means the `zone.js` is not imported.\n        // The `__zone_symbol__addEventListener` is basically a native DOM API, which is not patched by zone.js, thus not even going\n        // through the `zone.js` task lifecycle. You can also access the native DOM API as follows `target[Zone.__symbol__('methodName')]`.\n        // eslint-disable-next-line @typescript-eslint/dot-notation\n\n        _this.document.addEventListener = _this.document['__zone_symbol__addEventListener'] || _this.document.addEventListener;\n        const quillImport = yield import('quill');\n        _this.document.addEventListener = maybePatchedAddEventListener;\n        _this.Quill = quillImport.default ? quillImport.default : quillImport;\n      } // Only register custom options and modules once\n\n\n      _this.config.customOptions?.forEach(customOption => {\n        const newCustomOption = _this.Quill.import(customOption.import);\n\n        newCustomOption.whitelist = customOption.whitelist;\n\n        _this.Quill.register(newCustomOption, true, _this.config.suppressGlobalRegisterWarning);\n      });\n      return yield _this.registerCustomModules(_this.Quill, _this.config.customModules, _this.config.suppressGlobalRegisterWarning);\n    })).pipe(shareReplay({\n      bufferSize: 1,\n      refCount: true\n    }));\n    this.document = injector.get(DOCUMENT);\n\n    if (!this.config) {\n      this.config = {\n        modules: defaultModules\n      };\n    }\n  }\n\n  getQuill() {\n    return this.quill$;\n  }\n  /**\n   * Marked as internal so it won't be available for `ngx-quill` consumers, this is only\n   * internal method to be used within the library.\n   *\n   * @internal\n   */\n\n\n  registerCustomModules(Quill, customModules, suppressGlobalRegisterWarning) {\n    return _asyncToGenerator(function* () {\n      if (Array.isArray(customModules)) {\n        // eslint-disable-next-line prefer-const\n        for (let {\n          implementation,\n          path\n        } of customModules) {\n          // The `implementation` might be an observable that resolves the actual implementation,\n          // e.g. if it should be lazy loaded.\n          if (isObservable(implementation)) {\n            implementation = yield firstValueFrom(implementation);\n          }\n\n          Quill.register(path, implementation, suppressGlobalRegisterWarning);\n        }\n      } // Return `Quill` constructor so we'll be able to re-use its return value except of using\n      // `map` operators, etc.\n\n\n      return Quill;\n    })();\n  }\n\n}\n\nQuillService.ɵfac = function QuillService_Factory(t) {\n  return new (t || QuillService)(i0.ɵɵinject(i0.Injector), i0.ɵɵinject(QUILL_CONFIG_TOKEN, 8));\n};\n\nQuillService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: QuillService,\n  factory: QuillService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [QUILL_CONFIG_TOKEN]\n      }]\n    }];\n  }, null);\n})(); // eslint-disable-next-line @angular-eslint/directive-class-suffix\n\n\nclass QuillEditorBase {\n  constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n    this.elementRef = elementRef;\n    this.cd = cd;\n    this.domSanitizer = domSanitizer;\n    this.platformId = platformId;\n    this.renderer = renderer;\n    this.zone = zone;\n    this.service = service;\n    this.required = false;\n    this.customToolbarPosition = 'top';\n    this.styles = null;\n    this.strict = true;\n    this.customOptions = [];\n    this.customModules = [];\n    this.preserveWhitespace = false;\n    this.trimOnValidation = false;\n    this.compareValues = false;\n    this.filterNull = false;\n    /*\n    https://github.com/KillerCodeMonkey/ngx-quill/issues/1257 - fix null value set\n           provide default empty value\n    by default null\n           e.g. defaultEmptyValue=\"\" - empty string\n           <quill-editor\n      defaultEmptyValue=\"\"\n      formControlName=\"message\"\n    ></quill-editor>\n    */\n\n    this.defaultEmptyValue = null;\n    this.onEditorCreated = new EventEmitter();\n    this.onEditorChanged = new EventEmitter();\n    this.onContentChanged = new EventEmitter();\n    this.onSelectionChanged = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.disabled = false; // used to store initial value before ViewInit\n\n    this.preserve = false;\n    this.toolbarPosition = 'top';\n    this.subscription = null;\n    this.quillSubscription = null;\n\n    this.valueGetter = (quillEditor, editorElement) => {\n      let html = editorElement.querySelector('.ql-editor').innerHTML;\n\n      if (html === '<p><br></p>' || html === '<div><br></div>') {\n        html = this.defaultEmptyValue;\n      }\n\n      let modelValue = html;\n      const format = getFormat(this.format, this.service.config.format);\n\n      if (format === 'text') {\n        modelValue = quillEditor.getText();\n      } else if (format === 'object') {\n        modelValue = quillEditor.getContents();\n      } else if (format === 'json') {\n        try {\n          modelValue = JSON.stringify(quillEditor.getContents());\n        } catch (e) {\n          modelValue = quillEditor.getText();\n        }\n      }\n\n      return modelValue;\n    };\n\n    this.valueSetter = (quillEditor, value) => {\n      const format = getFormat(this.format, this.service.config.format);\n\n      if (format === 'html') {\n        const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : this.service.config.sanitize || false;\n\n        if (sanitize) {\n          value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n        }\n\n        return quillEditor.clipboard.convert(value);\n      } else if (format === 'json') {\n        try {\n          return JSON.parse(value);\n        } catch (e) {\n          return [{\n            insert: value\n          }];\n        }\n      }\n\n      return value;\n    };\n\n    this.selectionChangeHandler = (range, oldRange, source) => {\n      const shouldTriggerOnModelTouched = !range && !!this.onModelTouched; // only emit changes when there's any listener\n\n      if (!this.onBlur.observed && !this.onFocus.observed && !this.onSelectionChanged.observed && !shouldTriggerOnModelTouched) {\n        return;\n      }\n\n      this.zone.run(() => {\n        if (range === null) {\n          this.onBlur.emit({\n            editor: this.quillEditor,\n            source\n          });\n        } else if (oldRange === null) {\n          this.onFocus.emit({\n            editor: this.quillEditor,\n            source\n          });\n        }\n\n        this.onSelectionChanged.emit({\n          editor: this.quillEditor,\n          oldRange,\n          range,\n          source\n        });\n\n        if (shouldTriggerOnModelTouched) {\n          this.onModelTouched();\n        }\n\n        this.cd.markForCheck();\n      });\n    };\n\n    this.textChangeHandler = (delta, oldDelta, source) => {\n      // only emit changes emitted by user interactions\n      const text = this.quillEditor.getText();\n      const content = this.quillEditor.getContents();\n      let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n\n      if (html === '<p><br></p>' || html === '<div><br></div>') {\n        html = this.defaultEmptyValue;\n      }\n\n      const trackChanges = this.trackChanges || this.service.config.trackChanges;\n      const shouldTriggerOnModelChange = (source === 'user' || trackChanges && trackChanges === 'all') && !!this.onModelChange; // only emit changes when there's any listener\n\n      if (!this.onContentChanged.observed && !shouldTriggerOnModelChange) {\n        return;\n      }\n\n      this.zone.run(() => {\n        if (shouldTriggerOnModelChange) {\n          this.onModelChange(this.valueGetter(this.quillEditor, this.editorElem));\n        }\n\n        this.onContentChanged.emit({\n          content,\n          delta,\n          editor: this.quillEditor,\n          html,\n          oldDelta,\n          source,\n          text\n        });\n        this.cd.markForCheck();\n      });\n    }; // eslint-disable-next-line max-len\n\n\n    this.editorChangeHandler = (event, current, old, source) => {\n      // only emit changes when there's any listener\n      if (!this.onEditorChanged.observed) {\n        return;\n      } // only emit changes emitted by user interactions\n\n\n      if (event === 'text-change') {\n        const text = this.quillEditor.getText();\n        const content = this.quillEditor.getContents();\n        let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n\n        if (html === '<p><br></p>' || html === '<div><br></div>') {\n          html = this.defaultEmptyValue;\n        }\n\n        this.zone.run(() => {\n          this.onEditorChanged.emit({\n            content,\n            delta: current,\n            editor: this.quillEditor,\n            event,\n            html,\n            oldDelta: old,\n            source,\n            text\n          });\n          this.cd.markForCheck();\n        });\n      } else {\n        this.zone.run(() => {\n          this.onEditorChanged.emit({\n            editor: this.quillEditor,\n            event,\n            oldRange: old,\n            range: current,\n            source\n          });\n          this.cd.markForCheck();\n        });\n      }\n    };\n\n    this.document = injector.get(DOCUMENT);\n  }\n\n  static normalizeClassNames(classes) {\n    const classList = classes.trim().split(' ');\n    return classList.reduce((prev, cur) => {\n      const trimmed = cur.trim();\n\n      if (trimmed) {\n        prev.push(trimmed);\n      }\n\n      return prev;\n    }, []);\n  }\n\n  ngOnInit() {\n    this.preserve = this.preserveWhitespace;\n    this.toolbarPosition = this.customToolbarPosition;\n  }\n\n  ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    } // The `quill-editor` component might be destroyed before the `quill` chunk is loaded and its code is executed\n    // this will lead to runtime exceptions, since the code will be executed on DOM nodes that don't exist within the tree.\n\n\n    this.quillSubscription = this.service.getQuill().pipe(mergeMap(Quill => {\n      const promises = [this.service.registerCustomModules(Quill, this.customModules)];\n      const beforeRender = this.beforeRender ?? this.service.config.beforeRender;\n\n      if (beforeRender) {\n        promises.push(beforeRender());\n      }\n\n      return Promise.all(promises).then(() => Quill);\n    })).subscribe(Quill => {\n      this.editorElem = this.elementRef.nativeElement.querySelector('[quill-editor-element]');\n      const toolbarElem = this.elementRef.nativeElement.querySelector('[quill-editor-toolbar]');\n      const modules = Object.assign({}, this.modules || this.service.config.modules);\n\n      if (toolbarElem) {\n        modules.toolbar = toolbarElem;\n      } else if (modules.toolbar === undefined) {\n        modules.toolbar = defaultModules.toolbar;\n      }\n\n      let placeholder = this.placeholder !== undefined ? this.placeholder : this.service.config.placeholder;\n\n      if (placeholder === undefined) {\n        placeholder = 'Insert text here ...';\n      }\n\n      if (this.styles) {\n        Object.keys(this.styles).forEach(key => {\n          this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n        });\n      }\n\n      if (this.classes) {\n        this.addClasses(this.classes);\n      }\n\n      this.customOptions.forEach(customOption => {\n        const newCustomOption = Quill.import(customOption.import);\n        newCustomOption.whitelist = customOption.whitelist;\n        Quill.register(newCustomOption, true);\n      });\n      let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds;\n\n      if (!bounds) {\n        bounds = this.service.config.bounds ? this.service.config.bounds : this.document.body;\n      }\n\n      let debug = this.debug;\n\n      if (!debug && debug !== false && this.service.config.debug) {\n        debug = this.service.config.debug;\n      }\n\n      let readOnly = this.readOnly;\n\n      if (!readOnly && this.readOnly !== false) {\n        readOnly = this.service.config.readOnly !== undefined ? this.service.config.readOnly : false;\n      }\n\n      let defaultEmptyValue = this.defaultEmptyValue;\n\n      if (this.service.config.hasOwnProperty('defaultEmptyValue')) {\n        defaultEmptyValue = this.service.config.defaultEmptyValue;\n      }\n\n      let scrollingContainer = this.scrollingContainer;\n\n      if (!scrollingContainer && this.scrollingContainer !== null) {\n        scrollingContainer = this.service.config.scrollingContainer === null || this.service.config.scrollingContainer ? this.service.config.scrollingContainer : null;\n      }\n\n      let formats = this.formats;\n\n      if (!formats && formats === undefined) {\n        formats = this.service.config.formats ? [...this.service.config.formats] : this.service.config.formats === null ? null : undefined;\n      }\n\n      this.zone.runOutsideAngular(() => {\n        this.quillEditor = new Quill(this.editorElem, {\n          bounds,\n          debug: debug,\n          formats: formats,\n          modules,\n          placeholder,\n          readOnly,\n          defaultEmptyValue,\n          scrollingContainer: scrollingContainer,\n          strict: this.strict,\n          theme: this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n        }); // Set optional link placeholder, Quill has no native API for it so using workaround\n\n        if (this.linkPlaceholder) {\n          const tooltip = this.quillEditor?.theme?.tooltip;\n          const input = tooltip?.root?.querySelector('input[data-link]');\n\n          if (input?.dataset) {\n            input.dataset.link = this.linkPlaceholder;\n          }\n        }\n      });\n\n      if (this.content) {\n        const format = getFormat(this.format, this.service.config.format);\n\n        if (format === 'text') {\n          this.quillEditor.setText(this.content, 'silent');\n        } else {\n          const newValue = this.valueSetter(this.quillEditor, this.content);\n          this.quillEditor.setContents(newValue, 'silent');\n        }\n\n        this.quillEditor.getModule('history').clear();\n      } // initialize disabled status based on this.disabled as default value\n\n\n      this.setDisabledState();\n      this.addQuillEventListeners(); // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n      // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n\n      if (!this.onEditorCreated.observed && !this.onValidatorChanged) {\n        return;\n      } // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n      // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n      // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n\n\n      requestAnimationFrame(() => {\n        if (this.onValidatorChanged) {\n          this.onValidatorChanged();\n        }\n\n        this.onEditorCreated.emit(this.quillEditor);\n        this.onEditorCreated.complete();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.dispose();\n    this.quillSubscription?.unsubscribe();\n    this.quillSubscription = null;\n  }\n\n  ngOnChanges(changes) {\n    if (!this.quillEditor) {\n      return;\n    }\n    /* eslint-disable @typescript-eslint/dot-notation */\n\n\n    if (changes.readOnly) {\n      this.quillEditor.enable(!changes.readOnly.currentValue);\n    }\n\n    if (changes.placeholder) {\n      this.quillEditor.root.dataset.placeholder = changes.placeholder.currentValue;\n    }\n\n    if (changes.defaultEmptyValue) {\n      this.quillEditor.root.dataset.defaultEmptyValue = changes.defaultEmptyValue.currentValue;\n    }\n\n    if (changes.styles) {\n      const currentStyling = changes.styles.currentValue;\n      const previousStyling = changes.styles.previousValue;\n\n      if (previousStyling) {\n        Object.keys(previousStyling).forEach(key => {\n          this.renderer.removeStyle(this.editorElem, key);\n        });\n      }\n\n      if (currentStyling) {\n        Object.keys(currentStyling).forEach(key => {\n          this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n        });\n      }\n    }\n\n    if (changes.classes) {\n      const currentClasses = changes.classes.currentValue;\n      const previousClasses = changes.classes.previousValue;\n\n      if (previousClasses) {\n        this.removeClasses(previousClasses);\n      }\n\n      if (currentClasses) {\n        this.addClasses(currentClasses);\n      }\n    } // We'd want to re-apply event listeners if the `debounceTime` binding changes to apply the\n    // `debounceTime` operator or vice-versa remove it.\n\n\n    if (changes.debounceTime) {\n      this.addQuillEventListeners();\n    }\n    /* eslint-enable @typescript-eslint/dot-notation */\n\n  }\n\n  addClasses(classList) {\n    QuillEditorBase.normalizeClassNames(classList).forEach(c => {\n      this.renderer.addClass(this.editorElem, c);\n    });\n  }\n\n  removeClasses(classList) {\n    QuillEditorBase.normalizeClassNames(classList).forEach(c => {\n      this.renderer.removeClass(this.editorElem, c);\n    });\n  }\n\n  writeValue(currentValue) {\n    // optional fix for https://github.com/angular/angular/issues/14988\n    if (this.filterNull && currentValue === null) {\n      return;\n    }\n\n    this.content = currentValue;\n\n    if (!this.quillEditor) {\n      return;\n    }\n\n    const format = getFormat(this.format, this.service.config.format);\n    const newValue = this.valueSetter(this.quillEditor, currentValue);\n\n    if (this.compareValues) {\n      const currentEditorValue = this.quillEditor.getContents();\n\n      if (JSON.stringify(currentEditorValue) === JSON.stringify(newValue)) {\n        return;\n      }\n    }\n\n    if (currentValue) {\n      if (format === 'text') {\n        this.quillEditor.setText(currentValue);\n      } else {\n        this.quillEditor.setContents(newValue);\n      }\n\n      return;\n    }\n\n    this.quillEditor.setText('');\n  }\n\n  setDisabledState(isDisabled = this.disabled) {\n    // store initial value to set appropriate disabled status after ViewInit\n    this.disabled = isDisabled;\n\n    if (this.quillEditor) {\n      if (isDisabled) {\n        this.quillEditor.disable();\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled');\n      } else {\n        if (!this.readOnly) {\n          this.quillEditor.enable();\n        }\n\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n      }\n    }\n  }\n\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n\n  registerOnValidatorChange(fn) {\n    this.onValidatorChanged = fn;\n  }\n\n  validate() {\n    if (!this.quillEditor) {\n      return null;\n    }\n\n    const err = {};\n    let valid = true;\n    const text = this.quillEditor.getText(); // trim text if wanted + handle special case that an empty editor contains a new line\n\n    const textLength = this.trimOnValidation ? text.trim().length : text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1;\n    const deltaOperations = this.quillEditor.getContents().ops;\n    const onlyEmptyOperation = deltaOperations && deltaOperations.length === 1 && ['\\n', ''].includes(deltaOperations[0].insert);\n\n    if (this.minLength && textLength && textLength < this.minLength) {\n      err.minLengthError = {\n        given: textLength,\n        minLength: this.minLength\n      };\n      valid = false;\n    }\n\n    if (this.maxLength && textLength > this.maxLength) {\n      err.maxLengthError = {\n        given: textLength,\n        maxLength: this.maxLength\n      };\n      valid = false;\n    }\n\n    if (this.required && !textLength && onlyEmptyOperation) {\n      err.requiredError = {\n        empty: true\n      };\n      valid = false;\n    }\n\n    return valid ? null : err;\n  }\n\n  addQuillEventListeners() {\n    this.dispose(); // We have to enter the `<root>` zone when adding event listeners, so `debounceTime` will spawn the\n    // `AsyncAction` there w/o triggering change detections. We still re-enter the Angular's zone through\n    // `zone.run` when we emit an event to the parent component.\n\n    this.zone.runOutsideAngular(() => {\n      this.subscription = new Subscription();\n      this.subscription.add( // mark model as touched if editor lost focus\n      fromEvent(this.quillEditor, 'selection-change').subscribe(([range, oldRange, source]) => {\n        this.selectionChangeHandler(range, oldRange, source);\n      })); // The `fromEvent` supports passing JQuery-style event targets, the editor has `on` and `off` methods which\n      // will be invoked upon subscription and teardown.\n\n      let textChange$ = fromEvent(this.quillEditor, 'text-change');\n      let editorChange$ = fromEvent(this.quillEditor, 'editor-change');\n\n      if (typeof this.debounceTime === 'number') {\n        textChange$ = textChange$.pipe(debounceTime(this.debounceTime));\n        editorChange$ = editorChange$.pipe(debounceTime(this.debounceTime));\n      }\n\n      this.subscription.add( // update model if text changes\n      textChange$.subscribe(([delta, oldDelta, source]) => {\n        this.textChangeHandler(delta, oldDelta, source);\n      }));\n      this.subscription.add( // triggered if selection or text changed\n      editorChange$.subscribe(([event, current, old, source]) => {\n        this.editorChangeHandler(event, current, old, source);\n      }));\n    });\n  }\n\n  dispose() {\n    if (this.subscription !== null) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n  }\n\n}\n\nQuillEditorBase.ɵfac = function QuillEditorBase_Factory(t) {\n  return new (t || QuillEditorBase)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.DomSanitizer), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(QuillService));\n};\n\nQuillEditorBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: QuillEditorBase,\n  inputs: {\n    format: \"format\",\n    theme: \"theme\",\n    modules: \"modules\",\n    debug: \"debug\",\n    readOnly: \"readOnly\",\n    placeholder: \"placeholder\",\n    maxLength: \"maxLength\",\n    minLength: \"minLength\",\n    required: \"required\",\n    formats: \"formats\",\n    customToolbarPosition: \"customToolbarPosition\",\n    sanitize: \"sanitize\",\n    beforeRender: \"beforeRender\",\n    styles: \"styles\",\n    strict: \"strict\",\n    scrollingContainer: \"scrollingContainer\",\n    bounds: \"bounds\",\n    customOptions: \"customOptions\",\n    customModules: \"customModules\",\n    trackChanges: \"trackChanges\",\n    preserveWhitespace: \"preserveWhitespace\",\n    classes: \"classes\",\n    trimOnValidation: \"trimOnValidation\",\n    linkPlaceholder: \"linkPlaceholder\",\n    compareValues: \"compareValues\",\n    filterNull: \"filterNull\",\n    debounceTime: \"debounceTime\",\n    defaultEmptyValue: \"defaultEmptyValue\",\n    valueGetter: \"valueGetter\",\n    valueSetter: \"valueSetter\"\n  },\n  outputs: {\n    onEditorCreated: \"onEditorCreated\",\n    onEditorChanged: \"onEditorChanged\",\n    onContentChanged: \"onContentChanged\",\n    onSelectionChanged: \"onSelectionChanged\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillEditorBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.DomSanitizer\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: QuillService\n    }];\n  }, {\n    format: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    modules: [{\n      type: Input\n    }],\n    debug: [{\n      type: Input\n    }],\n    readOnly: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    maxLength: [{\n      type: Input\n    }],\n    minLength: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    formats: [{\n      type: Input\n    }],\n    customToolbarPosition: [{\n      type: Input\n    }],\n    sanitize: [{\n      type: Input\n    }],\n    beforeRender: [{\n      type: Input\n    }],\n    styles: [{\n      type: Input\n    }],\n    strict: [{\n      type: Input\n    }],\n    scrollingContainer: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    customOptions: [{\n      type: Input\n    }],\n    customModules: [{\n      type: Input\n    }],\n    trackChanges: [{\n      type: Input\n    }],\n    preserveWhitespace: [{\n      type: Input\n    }],\n    classes: [{\n      type: Input\n    }],\n    trimOnValidation: [{\n      type: Input\n    }],\n    linkPlaceholder: [{\n      type: Input\n    }],\n    compareValues: [{\n      type: Input\n    }],\n    filterNull: [{\n      type: Input\n    }],\n    debounceTime: [{\n      type: Input\n    }],\n    defaultEmptyValue: [{\n      type: Input\n    }],\n    onEditorCreated: [{\n      type: Output\n    }],\n    onEditorChanged: [{\n      type: Output\n    }],\n    onContentChanged: [{\n      type: Output\n    }],\n    onSelectionChanged: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    valueGetter: [{\n      type: Input\n    }],\n    valueSetter: [{\n      type: Input\n    }]\n  });\n})();\n\nclass QuillEditorComponent extends QuillEditorBase {\n  constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n    super(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service);\n  }\n\n}\n\nQuillEditorComponent.ɵfac = function QuillEditorComponent_Factory(t) {\n  return new (t || QuillEditorComponent)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(ElementRef), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(DomSanitizer), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(Renderer2), i0.ɵɵdirectiveInject(NgZone), i0.ɵɵdirectiveInject(QuillService));\n};\n\nQuillEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: QuillEditorComponent,\n  selectors: [[\"quill-editor\"]],\n  standalone: true,\n  features: [i0.ɵɵProvidersFeature([{\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    useExisting: forwardRef(() => QuillEditorComponent)\n  }, {\n    multi: true,\n    provide: NG_VALIDATORS,\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    useExisting: forwardRef(() => QuillEditorComponent)\n  }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n  ngContentSelectors: _c1,\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"quill-editor-element\", \"\", 4, \"ngIf\"], [\"quill-editor-element\", \"\"]],\n  template: function QuillEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c0);\n      i0.ɵɵtemplate(0, QuillEditorComponent_ng_container_0_Template, 3, 2, \"ng-container\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵtemplate(2, QuillEditorComponent_ng_container_2_Template, 3, 2, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.toolbarPosition !== \"top\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.toolbarPosition === \"top\");\n    }\n  },\n  dependencies: [CommonModule, i3.NgIf],\n  styles: [\"[_nghost-%COMP%]{display:inline-block}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillEditorComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.Emulated,\n      providers: [{\n        multi: true,\n        provide: NG_VALUE_ACCESSOR,\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        useExisting: forwardRef(() => QuillEditorComponent)\n      }, {\n        multi: true,\n        provide: NG_VALIDATORS,\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        useExisting: forwardRef(() => QuillEditorComponent)\n      }],\n      selector: 'quill-editor',\n      template: `\n  <ng-container *ngIf=\"toolbarPosition !== 'top'\">\n    <div quill-editor-element *ngIf=\"!preserve\"></div>\n    <pre quill-editor-element *ngIf=\"preserve\"></pre>\n  </ng-container>\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n  <ng-container *ngIf=\"toolbarPosition === 'top'\">\n    <div quill-editor-element *ngIf=\"!preserve\"></div>\n    <pre quill-editor-element *ngIf=\"preserve\"></pre>\n  </ng-container>\n`,\n      standalone: true,\n      imports: [CommonModule],\n      styles: [\":host{display:inline-block}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: i0.ElementRef,\n      decorators: [{\n        type: Inject,\n        args: [ElementRef]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef,\n      decorators: [{\n        type: Inject,\n        args: [ChangeDetectorRef]\n      }]\n    }, {\n      type: i1.DomSanitizer,\n      decorators: [{\n        type: Inject,\n        args: [DomSanitizer]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.Renderer2,\n      decorators: [{\n        type: Inject,\n        args: [Renderer2]\n      }]\n    }, {\n      type: i0.NgZone,\n      decorators: [{\n        type: Inject,\n        args: [NgZone]\n      }]\n    }, {\n      type: QuillService,\n      decorators: [{\n        type: Inject,\n        args: [QuillService]\n      }]\n    }];\n  }, null);\n})();\n\nclass QuillViewHTMLComponent {\n  constructor(sanitizer, service) {\n    this.sanitizer = sanitizer;\n    this.service = service;\n    this.content = '';\n    this.innerHTML = '';\n    this.themeClass = 'ql-snow';\n  }\n\n  ngOnChanges(changes) {\n    if (changes.theme) {\n      const theme = changes.theme.currentValue || (this.service.config.theme ? this.service.config.theme : 'snow');\n      this.themeClass = `ql-${theme} ngx-quill-view-html`;\n    } else if (!this.theme) {\n      const theme = this.service.config.theme ? this.service.config.theme : 'snow';\n      this.themeClass = `ql-${theme} ngx-quill-view-html`;\n    }\n\n    if (changes.content) {\n      const content = changes.content.currentValue;\n      const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : this.service.config.sanitize || false;\n      this.innerHTML = sanitize ? content : this.sanitizer.bypassSecurityTrustHtml(content);\n    }\n  }\n\n}\n\nQuillViewHTMLComponent.ɵfac = function QuillViewHTMLComponent_Factory(t) {\n  return new (t || QuillViewHTMLComponent)(i0.ɵɵdirectiveInject(DomSanitizer), i0.ɵɵdirectiveInject(QuillService));\n};\n\nQuillViewHTMLComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: QuillViewHTMLComponent,\n  selectors: [[\"quill-view-html\"]],\n  inputs: {\n    content: \"content\",\n    theme: \"theme\",\n    sanitize: \"sanitize\"\n  },\n  standalone: true,\n  features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"ql-container\", 3, \"ngClass\"], [1, \"ql-editor\", 3, \"innerHTML\"]],\n  template: function QuillViewHTMLComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", ctx.themeClass);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"innerHTML\", ctx.innerHTML, i0.ɵɵsanitizeHtml);\n    }\n  },\n  dependencies: [CommonModule, i3.NgClass],\n  styles: [\".ql-container.ngx-quill-view-html{border:0}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillViewHTMLComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      selector: 'quill-view-html',\n      template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`,\n      standalone: true,\n      imports: [CommonModule],\n      styles: [\".ql-container.ngx-quill-view-html{border:0}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i1.DomSanitizer,\n      decorators: [{\n        type: Inject,\n        args: [DomSanitizer]\n      }]\n    }, {\n      type: QuillService\n    }];\n  }, {\n    content: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    sanitize: [{\n      type: Input\n    }]\n  });\n})();\n\nclass QuillViewComponent {\n  constructor(elementRef, renderer, zone, service, domSanitizer, platformId) {\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.zone = zone;\n    this.service = service;\n    this.domSanitizer = domSanitizer;\n    this.platformId = platformId;\n    this.strict = true;\n    this.customModules = [];\n    this.customOptions = [];\n    this.preserveWhitespace = false;\n    this.onEditorCreated = new EventEmitter();\n    this.preserve = false;\n    this.quillSubscription = null;\n\n    this.valueSetter = (quillEditor, value) => {\n      const format = getFormat(this.format, this.service.config.format);\n      let content = value;\n\n      if (format === 'text') {\n        quillEditor.setText(content);\n      } else {\n        if (format === 'html') {\n          const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : this.service.config.sanitize || false;\n\n          if (sanitize) {\n            value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n          }\n\n          content = quillEditor.clipboard.convert(value);\n        } else if (format === 'json') {\n          try {\n            content = JSON.parse(value);\n          } catch (e) {\n            content = [{\n              insert: value\n            }];\n          }\n        }\n\n        quillEditor.setContents(content);\n      }\n    };\n  }\n\n  ngOnInit() {\n    this.preserve = this.preserveWhitespace;\n  }\n\n  ngOnChanges(changes) {\n    if (!this.quillEditor) {\n      return;\n    }\n\n    if (changes.content) {\n      this.valueSetter(this.quillEditor, changes.content.currentValue);\n    }\n  }\n\n  ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n\n    this.quillSubscription = this.service.getQuill().pipe(mergeMap(Quill => {\n      const promises = [this.service.registerCustomModules(Quill, this.customModules)];\n      const beforeRender = this.beforeRender ?? this.service.config.beforeRender;\n\n      if (beforeRender) {\n        promises.push(beforeRender());\n      }\n\n      return Promise.all(promises).then(() => Quill);\n    })).subscribe(Quill => {\n      const modules = Object.assign({}, this.modules || this.service.config.modules);\n      modules.toolbar = false;\n      this.customOptions.forEach(customOption => {\n        const newCustomOption = Quill.import(customOption.import);\n        newCustomOption.whitelist = customOption.whitelist;\n        Quill.register(newCustomOption, true);\n      });\n      let debug = this.debug;\n\n      if (!debug && debug !== false && this.service.config.debug) {\n        debug = this.service.config.debug;\n      }\n\n      let formats = this.formats;\n\n      if (!formats && formats === undefined) {\n        formats = this.service.config.formats ? Object.assign({}, this.service.config.formats) : this.service.config.formats === null ? null : undefined;\n      }\n\n      const theme = this.theme || (this.service.config.theme ? this.service.config.theme : 'snow');\n      this.editorElem = this.elementRef.nativeElement.querySelector('[quill-view-element]');\n      this.zone.runOutsideAngular(() => {\n        this.quillEditor = new Quill(this.editorElem, {\n          debug: debug,\n          formats: formats,\n          modules,\n          readOnly: true,\n          strict: this.strict,\n          theme\n        });\n      });\n      this.renderer.addClass(this.editorElem, 'ngx-quill-view');\n\n      if (this.content) {\n        this.valueSetter(this.quillEditor, this.content);\n      } // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n      // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n\n\n      if (!this.onEditorCreated.observers.length) {\n        return;\n      } // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n      // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n      // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n\n\n      requestAnimationFrame(() => {\n        this.onEditorCreated.emit(this.quillEditor);\n        this.onEditorCreated.complete();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.quillSubscription?.unsubscribe();\n    this.quillSubscription = null;\n  }\n\n}\n\nQuillViewComponent.ɵfac = function QuillViewComponent_Factory(t) {\n  return new (t || QuillViewComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(QuillService), i0.ɵɵdirectiveInject(i1.DomSanitizer), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nQuillViewComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: QuillViewComponent,\n  selectors: [[\"quill-view\"]],\n  inputs: {\n    format: \"format\",\n    theme: \"theme\",\n    modules: \"modules\",\n    debug: \"debug\",\n    formats: \"formats\",\n    sanitize: \"sanitize\",\n    beforeRender: \"beforeRender\",\n    strict: \"strict\",\n    content: \"content\",\n    customModules: \"customModules\",\n    customOptions: \"customOptions\",\n    preserveWhitespace: \"preserveWhitespace\"\n  },\n  outputs: {\n    onEditorCreated: \"onEditorCreated\"\n  },\n  standalone: true,\n  features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[\"quill-view-element\", \"\", 4, \"ngIf\"], [\"quill-view-element\", \"\"]],\n  template: function QuillViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, QuillViewComponent_div_0_Template, 1, 0, \"div\", 0);\n      i0.ɵɵtemplate(1, QuillViewComponent_pre_1_Template, 1, 0, \"pre\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.preserve);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.preserve);\n    }\n  },\n  dependencies: [CommonModule, i3.NgIf],\n  styles: [\".ql-container.ngx-quill-view{border:0}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillViewComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      selector: 'quill-view',\n      template: `\n<div quill-view-element *ngIf=\"!preserve\"></div>\n<pre quill-view-element *ngIf=\"preserve\"></pre>\n`,\n      standalone: true,\n      imports: [CommonModule],\n      styles: [\".ql-container.ngx-quill-view{border:0}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: QuillService\n    }, {\n      type: i1.DomSanitizer\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    format: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    modules: [{\n      type: Input\n    }],\n    debug: [{\n      type: Input\n    }],\n    formats: [{\n      type: Input\n    }],\n    sanitize: [{\n      type: Input\n    }],\n    beforeRender: [{\n      type: Input\n    }],\n    strict: [{\n      type: Input\n    }],\n    content: [{\n      type: Input\n    }],\n    customModules: [{\n      type: Input\n    }],\n    customOptions: [{\n      type: Input\n    }],\n    preserveWhitespace: [{\n      type: Input\n    }],\n    onEditorCreated: [{\n      type: Output\n    }]\n  });\n})();\n\nclass QuillModule {\n  static forRoot(config) {\n    return {\n      ngModule: QuillModule,\n      providers: [{\n        provide: QUILL_CONFIG_TOKEN,\n        useValue: config\n      }]\n    };\n  }\n\n}\n\nQuillModule.ɵfac = function QuillModule_Factory(t) {\n  return new (t || QuillModule)();\n};\n\nQuillModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: QuillModule\n});\nQuillModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillModule, [{\n    type: NgModule,\n    args: [{\n      imports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n      exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent]\n    }]\n  }], null, null);\n})();\n/*\n * Public API Surface of ngx-quill\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { QuillEditorBase, QuillEditorComponent, QuillModule, QuillService, QuillViewComponent, QuillViewHTMLComponent };","map":{"version":3,"names":["defaultModules","QUILL_CONFIG_TOKEN","i0","Injectable","Optional","Inject","EventEmitter","SecurityContext","PLATFORM_ID","Directive","Input","Output","ElementRef","ChangeDetectorRef","Renderer2","NgZone","forwardRef","Component","ViewEncapsulation","NgModule","i3","DOCUMENT","isPlatformServer","CommonModule","i1","DomSanitizer","defer","isObservable","firstValueFrom","Subscription","fromEvent","shareReplay","mergeMap","debounceTime","NG_VALUE_ACCESSOR","NG_VALIDATORS","getFormat","format","configFormat","passedFormat","QuillService","constructor","injector","config","quill$","Quill","maybePatchedAddEventListener","document","addEventListener","quillImport","default","customOptions","forEach","customOption","newCustomOption","import","whitelist","register","suppressGlobalRegisterWarning","registerCustomModules","customModules","pipe","bufferSize","refCount","get","modules","getQuill","Array","isArray","implementation","path","ɵfac","Injector","ɵprov","type","args","providedIn","undefined","decorators","QuillEditorBase","elementRef","cd","domSanitizer","platformId","renderer","zone","service","required","customToolbarPosition","styles","strict","preserveWhitespace","trimOnValidation","compareValues","filterNull","defaultEmptyValue","onEditorCreated","onEditorChanged","onContentChanged","onSelectionChanged","onFocus","onBlur","disabled","preserve","toolbarPosition","subscription","quillSubscription","valueGetter","quillEditor","editorElement","html","querySelector","innerHTML","modelValue","getText","getContents","JSON","stringify","e","valueSetter","value","sanitize","includes","HTML","clipboard","convert","parse","insert","selectionChangeHandler","range","oldRange","source","shouldTriggerOnModelTouched","onModelTouched","observed","run","emit","editor","markForCheck","textChangeHandler","delta","oldDelta","text","content","editorElem","trackChanges","shouldTriggerOnModelChange","onModelChange","editorChangeHandler","event","current","old","normalizeClassNames","classes","classList","trim","split","reduce","prev","cur","trimmed","push","ngOnInit","ngAfterViewInit","promises","beforeRender","Promise","all","then","subscribe","nativeElement","toolbarElem","Object","assign","toolbar","placeholder","keys","key","setStyle","addClasses","bounds","body","debug","readOnly","hasOwnProperty","scrollingContainer","formats","runOutsideAngular","theme","linkPlaceholder","tooltip","input","root","dataset","link","setText","newValue","setContents","getModule","clear","setDisabledState","addQuillEventListeners","onValidatorChanged","requestAnimationFrame","complete","ngOnDestroy","dispose","unsubscribe","ngOnChanges","changes","enable","currentValue","currentStyling","previousStyling","previousValue","removeStyle","currentClasses","previousClasses","removeClasses","c","addClass","removeClass","writeValue","currentEditorValue","isDisabled","disable","setAttribute","removeAttribute","registerOnChange","fn","registerOnTouched","registerOnValidatorChange","validate","err","valid","textLength","length","deltaOperations","ops","onlyEmptyOperation","minLength","minLengthError","given","maxLength","maxLengthError","requiredError","empty","add","textChange$","editorChange$","ɵdir","QuillEditorComponent","ɵcmp","multi","provide","useExisting","NgIf","encapsulation","Emulated","providers","selector","template","standalone","imports","QuillViewHTMLComponent","sanitizer","themeClass","bypassSecurityTrustHtml","NgClass","None","QuillViewComponent","observers","QuillModule","forRoot","ngModule","useValue","ɵmod","ɵinj","exports"],"sources":["/home/mohit/Desktop/Projects/frontend/portfolio/node_modules/ngx-quill/fesm2020/ngx-quill.mjs"],"sourcesContent":["import { defaultModules, QUILL_CONFIG_TOKEN } from 'ngx-quill/config';\nexport * from 'ngx-quill/config';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, Inject, EventEmitter, SecurityContext, PLATFORM_ID, Directive, Input, Output, ElementRef, ChangeDetectorRef, Renderer2, NgZone, forwardRef, Component, ViewEncapsulation, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i1 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { defer, isObservable, firstValueFrom, Subscription, fromEvent } from 'rxjs';\nimport { shareReplay, mergeMap, debounceTime } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nconst getFormat = (format, configFormat) => {\n    const passedFormat = format || configFormat;\n    return passedFormat || 'html';\n};\n\nclass QuillService {\n    constructor(injector, config) {\n        this.config = config;\n        this.quill$ = defer(async () => {\n            if (!this.Quill) {\n                // Quill adds events listeners on import https://github.com/quilljs/quill/blob/develop/core/emitter.js#L8\n                // We'd want to use the unpatched `addEventListener` method to have all event callbacks to be run outside of zone.\n                // We don't know yet if the `zone.js` is used or not, just save the value to restore it back further.\n                const maybePatchedAddEventListener = this.document.addEventListener;\n                // There're 2 types of Angular applications:\n                // 1) zone-full (by default)\n                // 2) zone-less\n                // The developer can avoid importing the `zone.js` package and tells Angular that he/she is responsible for running\n                // the change detection by himself. This is done by \"nooping\" the zone through `CompilerOptions` when bootstrapping\n                // the root module. We fallback to `document.addEventListener` if `__zone_symbol__addEventListener` is not defined,\n                // this means the `zone.js` is not imported.\n                // The `__zone_symbol__addEventListener` is basically a native DOM API, which is not patched by zone.js, thus not even going\n                // through the `zone.js` task lifecycle. You can also access the native DOM API as follows `target[Zone.__symbol__('methodName')]`.\n                // eslint-disable-next-line @typescript-eslint/dot-notation\n                this.document.addEventListener = this.document['__zone_symbol__addEventListener'] || this.document.addEventListener;\n                const quillImport = await import('quill');\n                this.document.addEventListener = maybePatchedAddEventListener;\n                this.Quill = (quillImport.default ? quillImport.default : quillImport);\n            }\n            // Only register custom options and modules once\n            this.config.customOptions?.forEach((customOption) => {\n                const newCustomOption = this.Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                this.Quill.register(newCustomOption, true, this.config.suppressGlobalRegisterWarning);\n            });\n            return await this.registerCustomModules(this.Quill, this.config.customModules, this.config.suppressGlobalRegisterWarning);\n        }).pipe(shareReplay({ bufferSize: 1, refCount: true }));\n        this.document = injector.get(DOCUMENT);\n        if (!this.config) {\n            this.config = { modules: defaultModules };\n        }\n    }\n    getQuill() {\n        return this.quill$;\n    }\n    /**\n     * Marked as internal so it won't be available for `ngx-quill` consumers, this is only\n     * internal method to be used within the library.\n     *\n     * @internal\n     */\n    async registerCustomModules(Quill, customModules, suppressGlobalRegisterWarning) {\n        if (Array.isArray(customModules)) {\n            // eslint-disable-next-line prefer-const\n            for (let { implementation, path } of customModules) {\n                // The `implementation` might be an observable that resolves the actual implementation,\n                // e.g. if it should be lazy loaded.\n                if (isObservable(implementation)) {\n                    implementation = await firstValueFrom(implementation);\n                }\n                Quill.register(path, implementation, suppressGlobalRegisterWarning);\n            }\n        }\n        // Return `Quill` constructor so we'll be able to re-use its return value except of using\n        // `map` operators, etc.\n        return Quill;\n    }\n}\nQuillService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: QuillService, deps: [{ token: i0.Injector }, { token: QUILL_CONFIG_TOKEN, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nQuillService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: QuillService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: QuillService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [QUILL_CONFIG_TOKEN]\n                }] }]; } });\n\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nclass QuillEditorBase {\n    constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n        this.elementRef = elementRef;\n        this.cd = cd;\n        this.domSanitizer = domSanitizer;\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.service = service;\n        this.required = false;\n        this.customToolbarPosition = 'top';\n        this.styles = null;\n        this.strict = true;\n        this.customOptions = [];\n        this.customModules = [];\n        this.preserveWhitespace = false;\n        this.trimOnValidation = false;\n        this.compareValues = false;\n        this.filterNull = false;\n        /*\n        https://github.com/KillerCodeMonkey/ngx-quill/issues/1257 - fix null value set\n      \n        provide default empty value\n        by default null\n      \n        e.g. defaultEmptyValue=\"\" - empty string\n      \n        <quill-editor\n          defaultEmptyValue=\"\"\n          formControlName=\"message\"\n        ></quill-editor>\n        */\n        this.defaultEmptyValue = null;\n        this.onEditorCreated = new EventEmitter();\n        this.onEditorChanged = new EventEmitter();\n        this.onContentChanged = new EventEmitter();\n        this.onSelectionChanged = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.disabled = false; // used to store initial value before ViewInit\n        this.preserve = false;\n        this.toolbarPosition = 'top';\n        this.subscription = null;\n        this.quillSubscription = null;\n        this.valueGetter = (quillEditor, editorElement) => {\n            let html = editorElement.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = this.defaultEmptyValue;\n            }\n            let modelValue = html;\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'text') {\n                modelValue = quillEditor.getText();\n            }\n            else if (format === 'object') {\n                modelValue = quillEditor.getContents();\n            }\n            else if (format === 'json') {\n                try {\n                    modelValue = JSON.stringify(quillEditor.getContents());\n                }\n                catch (e) {\n                    modelValue = quillEditor.getText();\n                }\n            }\n            return modelValue;\n        };\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'html') {\n                const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : (this.service.config.sanitize || false);\n                if (sanitize) {\n                    value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                }\n                return quillEditor.clipboard.convert(value);\n            }\n            else if (format === 'json') {\n                try {\n                    return JSON.parse(value);\n                }\n                catch (e) {\n                    return [{ insert: value }];\n                }\n            }\n            return value;\n        };\n        this.selectionChangeHandler = (range, oldRange, source) => {\n            const shouldTriggerOnModelTouched = !range && !!this.onModelTouched;\n            // only emit changes when there's any listener\n            if (!this.onBlur.observed &&\n                !this.onFocus.observed &&\n                !this.onSelectionChanged.observed &&\n                !shouldTriggerOnModelTouched) {\n                return;\n            }\n            this.zone.run(() => {\n                if (range === null) {\n                    this.onBlur.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                else if (oldRange === null) {\n                    this.onFocus.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                this.onSelectionChanged.emit({\n                    editor: this.quillEditor,\n                    oldRange,\n                    range,\n                    source\n                });\n                if (shouldTriggerOnModelTouched) {\n                    this.onModelTouched();\n                }\n                this.cd.markForCheck();\n            });\n        };\n        this.textChangeHandler = (delta, oldDelta, source) => {\n            // only emit changes emitted by user interactions\n            const text = this.quillEditor.getText();\n            const content = this.quillEditor.getContents();\n            let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = this.defaultEmptyValue;\n            }\n            const trackChanges = this.trackChanges || this.service.config.trackChanges;\n            const shouldTriggerOnModelChange = (source === 'user' || trackChanges && trackChanges === 'all') && !!this.onModelChange;\n            // only emit changes when there's any listener\n            if (!this.onContentChanged.observed && !shouldTriggerOnModelChange) {\n                return;\n            }\n            this.zone.run(() => {\n                if (shouldTriggerOnModelChange) {\n                    this.onModelChange(this.valueGetter(this.quillEditor, this.editorElem));\n                }\n                this.onContentChanged.emit({\n                    content,\n                    delta,\n                    editor: this.quillEditor,\n                    html,\n                    oldDelta,\n                    source,\n                    text\n                });\n                this.cd.markForCheck();\n            });\n        };\n        // eslint-disable-next-line max-len\n        this.editorChangeHandler = (event, current, old, source) => {\n            // only emit changes when there's any listener\n            if (!this.onEditorChanged.observed) {\n                return;\n            }\n            // only emit changes emitted by user interactions\n            if (event === 'text-change') {\n                const text = this.quillEditor.getText();\n                const content = this.quillEditor.getContents();\n                let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n                if (html === '<p><br></p>' || html === '<div><br></div>') {\n                    html = this.defaultEmptyValue;\n                }\n                this.zone.run(() => {\n                    this.onEditorChanged.emit({\n                        content,\n                        delta: current,\n                        editor: this.quillEditor,\n                        event,\n                        html,\n                        oldDelta: old,\n                        source,\n                        text\n                    });\n                    this.cd.markForCheck();\n                });\n            }\n            else {\n                this.zone.run(() => {\n                    this.onEditorChanged.emit({\n                        editor: this.quillEditor,\n                        event,\n                        oldRange: old,\n                        range: current,\n                        source\n                    });\n                    this.cd.markForCheck();\n                });\n            }\n        };\n        this.document = injector.get(DOCUMENT);\n    }\n    static normalizeClassNames(classes) {\n        const classList = classes.trim().split(' ');\n        return classList.reduce((prev, cur) => {\n            const trimmed = cur.trim();\n            if (trimmed) {\n                prev.push(trimmed);\n            }\n            return prev;\n        }, []);\n    }\n    ngOnInit() {\n        this.preserve = this.preserveWhitespace;\n        this.toolbarPosition = this.customToolbarPosition;\n    }\n    ngAfterViewInit() {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        // The `quill-editor` component might be destroyed before the `quill` chunk is loaded and its code is executed\n        // this will lead to runtime exceptions, since the code will be executed on DOM nodes that don't exist within the tree.\n        this.quillSubscription = this.service.getQuill().pipe(mergeMap((Quill) => {\n            const promises = [this.service.registerCustomModules(Quill, this.customModules)];\n            const beforeRender = this.beforeRender ?? this.service.config.beforeRender;\n            if (beforeRender) {\n                promises.push(beforeRender());\n            }\n            return Promise.all(promises).then(() => Quill);\n        })).subscribe(Quill => {\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-editor-element]');\n            const toolbarElem = this.elementRef.nativeElement.querySelector('[quill-editor-toolbar]');\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            if (toolbarElem) {\n                modules.toolbar = toolbarElem;\n            }\n            else if (modules.toolbar === undefined) {\n                modules.toolbar = defaultModules.toolbar;\n            }\n            let placeholder = this.placeholder !== undefined ? this.placeholder : this.service.config.placeholder;\n            if (placeholder === undefined) {\n                placeholder = 'Insert text here ...';\n            }\n            if (this.styles) {\n                Object.keys(this.styles).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n            if (this.classes) {\n                this.addClasses(this.classes);\n            }\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds;\n            if (!bounds) {\n                bounds = this.service.config.bounds ? this.service.config.bounds : this.document.body;\n            }\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let readOnly = this.readOnly;\n            if (!readOnly && this.readOnly !== false) {\n                readOnly = this.service.config.readOnly !== undefined ? this.service.config.readOnly : false;\n            }\n            let defaultEmptyValue = this.defaultEmptyValue;\n            if (this.service.config.hasOwnProperty('defaultEmptyValue')) {\n                defaultEmptyValue = this.service.config.defaultEmptyValue;\n            }\n            let scrollingContainer = this.scrollingContainer;\n            if (!scrollingContainer && this.scrollingContainer !== null) {\n                scrollingContainer =\n                    this.service.config.scrollingContainer === null\n                        || this.service.config.scrollingContainer ? this.service.config.scrollingContainer : null;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ? [...this.service.config.formats] : (this.service.config.formats === null ? null : undefined);\n            }\n            this.zone.runOutsideAngular(() => {\n                this.quillEditor = new Quill(this.editorElem, {\n                    bounds,\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    placeholder,\n                    readOnly,\n                    defaultEmptyValue,\n                    scrollingContainer: scrollingContainer,\n                    strict: this.strict,\n                    theme: this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n                });\n                // Set optional link placeholder, Quill has no native API for it so using workaround\n                if (this.linkPlaceholder) {\n                    const tooltip = this.quillEditor?.theme?.tooltip;\n                    const input = tooltip?.root?.querySelector('input[data-link]');\n                    if (input?.dataset) {\n                        input.dataset.link = this.linkPlaceholder;\n                    }\n                }\n            });\n            if (this.content) {\n                const format = getFormat(this.format, this.service.config.format);\n                if (format === 'text') {\n                    this.quillEditor.setText(this.content, 'silent');\n                }\n                else {\n                    const newValue = this.valueSetter(this.quillEditor, this.content);\n                    this.quillEditor.setContents(newValue, 'silent');\n                }\n                this.quillEditor.getModule('history').clear();\n            }\n            // initialize disabled status based on this.disabled as default value\n            this.setDisabledState();\n            this.addQuillEventListeners();\n            // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n            // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n            if (!this.onEditorCreated.observed && !this.onValidatorChanged) {\n                return;\n            }\n            // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n            // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n            // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n            requestAnimationFrame(() => {\n                if (this.onValidatorChanged) {\n                    this.onValidatorChanged();\n                }\n                this.onEditorCreated.emit(this.quillEditor);\n                this.onEditorCreated.complete();\n            });\n        });\n    }\n    ngOnDestroy() {\n        this.dispose();\n        this.quillSubscription?.unsubscribe();\n        this.quillSubscription = null;\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        /* eslint-disable @typescript-eslint/dot-notation */\n        if (changes.readOnly) {\n            this.quillEditor.enable(!changes.readOnly.currentValue);\n        }\n        if (changes.placeholder) {\n            this.quillEditor.root.dataset.placeholder =\n                changes.placeholder.currentValue;\n        }\n        if (changes.defaultEmptyValue) {\n            this.quillEditor.root.dataset.defaultEmptyValue =\n                changes.defaultEmptyValue.currentValue;\n        }\n        if (changes.styles) {\n            const currentStyling = changes.styles.currentValue;\n            const previousStyling = changes.styles.previousValue;\n            if (previousStyling) {\n                Object.keys(previousStyling).forEach((key) => {\n                    this.renderer.removeStyle(this.editorElem, key);\n                });\n            }\n            if (currentStyling) {\n                Object.keys(currentStyling).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n        }\n        if (changes.classes) {\n            const currentClasses = changes.classes.currentValue;\n            const previousClasses = changes.classes.previousValue;\n            if (previousClasses) {\n                this.removeClasses(previousClasses);\n            }\n            if (currentClasses) {\n                this.addClasses(currentClasses);\n            }\n        }\n        // We'd want to re-apply event listeners if the `debounceTime` binding changes to apply the\n        // `debounceTime` operator or vice-versa remove it.\n        if (changes.debounceTime) {\n            this.addQuillEventListeners();\n        }\n        /* eslint-enable @typescript-eslint/dot-notation */\n    }\n    addClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.addClass(this.editorElem, c);\n        });\n    }\n    removeClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.removeClass(this.editorElem, c);\n        });\n    }\n    writeValue(currentValue) {\n        // optional fix for https://github.com/angular/angular/issues/14988\n        if (this.filterNull && currentValue === null) {\n            return;\n        }\n        this.content = currentValue;\n        if (!this.quillEditor) {\n            return;\n        }\n        const format = getFormat(this.format, this.service.config.format);\n        const newValue = this.valueSetter(this.quillEditor, currentValue);\n        if (this.compareValues) {\n            const currentEditorValue = this.quillEditor.getContents();\n            if (JSON.stringify(currentEditorValue) === JSON.stringify(newValue)) {\n                return;\n            }\n        }\n        if (currentValue) {\n            if (format === 'text') {\n                this.quillEditor.setText(currentValue);\n            }\n            else {\n                this.quillEditor.setContents(newValue);\n            }\n            return;\n        }\n        this.quillEditor.setText('');\n    }\n    setDisabledState(isDisabled = this.disabled) {\n        // store initial value to set appropriate disabled status after ViewInit\n        this.disabled = isDisabled;\n        if (this.quillEditor) {\n            if (isDisabled) {\n                this.quillEditor.disable();\n                this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled');\n            }\n            else {\n                if (!this.readOnly) {\n                    this.quillEditor.enable();\n                }\n                this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n            }\n        }\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    registerOnValidatorChange(fn) {\n        this.onValidatorChanged = fn;\n    }\n    validate() {\n        if (!this.quillEditor) {\n            return null;\n        }\n        const err = {};\n        let valid = true;\n        const text = this.quillEditor.getText();\n        // trim text if wanted + handle special case that an empty editor contains a new line\n        const textLength = this.trimOnValidation ? text.trim().length : (text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1);\n        const deltaOperations = this.quillEditor.getContents().ops;\n        const onlyEmptyOperation = deltaOperations && deltaOperations.length === 1 && ['\\n', ''].includes(deltaOperations[0].insert);\n        if (this.minLength && textLength && textLength < this.minLength) {\n            err.minLengthError = {\n                given: textLength,\n                minLength: this.minLength\n            };\n            valid = false;\n        }\n        if (this.maxLength && textLength > this.maxLength) {\n            err.maxLengthError = {\n                given: textLength,\n                maxLength: this.maxLength\n            };\n            valid = false;\n        }\n        if (this.required && !textLength && onlyEmptyOperation) {\n            err.requiredError = {\n                empty: true\n            };\n            valid = false;\n        }\n        return valid ? null : err;\n    }\n    addQuillEventListeners() {\n        this.dispose();\n        // We have to enter the `<root>` zone when adding event listeners, so `debounceTime` will spawn the\n        // `AsyncAction` there w/o triggering change detections. We still re-enter the Angular's zone through\n        // `zone.run` when we emit an event to the parent component.\n        this.zone.runOutsideAngular(() => {\n            this.subscription = new Subscription();\n            this.subscription.add(\n            // mark model as touched if editor lost focus\n            fromEvent(this.quillEditor, 'selection-change').subscribe(([range, oldRange, source]) => {\n                this.selectionChangeHandler(range, oldRange, source);\n            }));\n            // The `fromEvent` supports passing JQuery-style event targets, the editor has `on` and `off` methods which\n            // will be invoked upon subscription and teardown.\n            let textChange$ = fromEvent(this.quillEditor, 'text-change');\n            let editorChange$ = fromEvent(this.quillEditor, 'editor-change');\n            if (typeof this.debounceTime === 'number') {\n                textChange$ = textChange$.pipe(debounceTime(this.debounceTime));\n                editorChange$ = editorChange$.pipe(debounceTime(this.debounceTime));\n            }\n            this.subscription.add(\n            // update model if text changes\n            textChange$.subscribe(([delta, oldDelta, source]) => {\n                this.textChangeHandler(delta, oldDelta, source);\n            }));\n            this.subscription.add(\n            // triggered if selection or text changed\n            editorChange$.subscribe(([event, current, old, source]) => {\n                this.editorChangeHandler(event, current, old, source);\n            }));\n        });\n    }\n    dispose() {\n        if (this.subscription !== null) {\n            this.subscription.unsubscribe();\n            this.subscription = null;\n        }\n    }\n}\nQuillEditorBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: QuillEditorBase, deps: [{ token: i0.Injector }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.DomSanitizer }, { token: PLATFORM_ID }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: QuillService }], target: i0.ɵɵFactoryTarget.Directive });\nQuillEditorBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: QuillEditorBase, inputs: { format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", readOnly: \"readOnly\", placeholder: \"placeholder\", maxLength: \"maxLength\", minLength: \"minLength\", required: \"required\", formats: \"formats\", customToolbarPosition: \"customToolbarPosition\", sanitize: \"sanitize\", beforeRender: \"beforeRender\", styles: \"styles\", strict: \"strict\", scrollingContainer: \"scrollingContainer\", bounds: \"bounds\", customOptions: \"customOptions\", customModules: \"customModules\", trackChanges: \"trackChanges\", preserveWhitespace: \"preserveWhitespace\", classes: \"classes\", trimOnValidation: \"trimOnValidation\", linkPlaceholder: \"linkPlaceholder\", compareValues: \"compareValues\", filterNull: \"filterNull\", debounceTime: \"debounceTime\", defaultEmptyValue: \"defaultEmptyValue\", valueGetter: \"valueGetter\", valueSetter: \"valueSetter\" }, outputs: { onEditorCreated: \"onEditorCreated\", onEditorChanged: \"onEditorChanged\", onContentChanged: \"onContentChanged\", onSelectionChanged: \"onSelectionChanged\", onFocus: \"onFocus\", onBlur: \"onBlur\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: QuillEditorBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.DomSanitizer }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: QuillService }]; }, propDecorators: { format: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], modules: [{\n                type: Input\n            }], debug: [{\n                type: Input\n            }], readOnly: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], maxLength: [{\n                type: Input\n            }], minLength: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], formats: [{\n                type: Input\n            }], customToolbarPosition: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }], beforeRender: [{\n                type: Input\n            }], styles: [{\n                type: Input\n            }], strict: [{\n                type: Input\n            }], scrollingContainer: [{\n                type: Input\n            }], bounds: [{\n                type: Input\n            }], customOptions: [{\n                type: Input\n            }], customModules: [{\n                type: Input\n            }], trackChanges: [{\n                type: Input\n            }], preserveWhitespace: [{\n                type: Input\n            }], classes: [{\n                type: Input\n            }], trimOnValidation: [{\n                type: Input\n            }], linkPlaceholder: [{\n                type: Input\n            }], compareValues: [{\n                type: Input\n            }], filterNull: [{\n                type: Input\n            }], debounceTime: [{\n                type: Input\n            }], defaultEmptyValue: [{\n                type: Input\n            }], onEditorCreated: [{\n                type: Output\n            }], onEditorChanged: [{\n                type: Output\n            }], onContentChanged: [{\n                type: Output\n            }], onSelectionChanged: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], valueGetter: [{\n                type: Input\n            }], valueSetter: [{\n                type: Input\n            }] } });\nclass QuillEditorComponent extends QuillEditorBase {\n    constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n        super(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service);\n    }\n}\nQuillEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: QuillEditorComponent, deps: [{ token: i0.Injector }, { token: ElementRef }, { token: ChangeDetectorRef }, { token: DomSanitizer }, { token: PLATFORM_ID }, { token: Renderer2 }, { token: NgZone }, { token: QuillService }], target: i0.ɵɵFactoryTarget.Component });\nQuillEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.1\", type: QuillEditorComponent, isStandalone: true, selector: \"quill-editor\", providers: [\n        {\n            multi: true,\n            provide: NG_VALUE_ACCESSOR,\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            useExisting: forwardRef(() => QuillEditorComponent)\n        },\n        {\n            multi: true,\n            provide: NG_VALIDATORS,\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            useExisting: forwardRef(() => QuillEditorComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: `\n  <ng-container *ngIf=\"toolbarPosition !== 'top'\">\n    <div quill-editor-element *ngIf=\"!preserve\"></div>\n    <pre quill-editor-element *ngIf=\"preserve\"></pre>\n  </ng-container>\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n  <ng-container *ngIf=\"toolbarPosition === 'top'\">\n    <div quill-editor-element *ngIf=\"!preserve\"></div>\n    <pre quill-editor-element *ngIf=\"preserve\"></pre>\n  </ng-container>\n`, isInline: true, styles: [\":host{display:inline-block}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: QuillEditorComponent, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.Emulated, providers: [\n                        {\n                            multi: true,\n                            provide: NG_VALUE_ACCESSOR,\n                            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                            useExisting: forwardRef(() => QuillEditorComponent)\n                        },\n                        {\n                            multi: true,\n                            provide: NG_VALIDATORS,\n                            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                            useExisting: forwardRef(() => QuillEditorComponent)\n                        }\n                    ], selector: 'quill-editor', template: `\n  <ng-container *ngIf=\"toolbarPosition !== 'top'\">\n    <div quill-editor-element *ngIf=\"!preserve\"></div>\n    <pre quill-editor-element *ngIf=\"preserve\"></pre>\n  </ng-container>\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n  <ng-container *ngIf=\"toolbarPosition === 'top'\">\n    <div quill-editor-element *ngIf=\"!preserve\"></div>\n    <pre quill-editor-element *ngIf=\"preserve\"></pre>\n  </ng-container>\n`, standalone: true, imports: [CommonModule], styles: [\":host{display:inline-block}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i0.ElementRef, decorators: [{\n                    type: Inject,\n                    args: [ElementRef]\n                }] }, { type: i0.ChangeDetectorRef, decorators: [{\n                    type: Inject,\n                    args: [ChangeDetectorRef]\n                }] }, { type: i1.DomSanitizer, decorators: [{\n                    type: Inject,\n                    args: [DomSanitizer]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.Renderer2, decorators: [{\n                    type: Inject,\n                    args: [Renderer2]\n                }] }, { type: i0.NgZone, decorators: [{\n                    type: Inject,\n                    args: [NgZone]\n                }] }, { type: QuillService, decorators: [{\n                    type: Inject,\n                    args: [QuillService]\n                }] }]; } });\n\nclass QuillViewHTMLComponent {\n    constructor(sanitizer, service) {\n        this.sanitizer = sanitizer;\n        this.service = service;\n        this.content = '';\n        this.innerHTML = '';\n        this.themeClass = 'ql-snow';\n    }\n    ngOnChanges(changes) {\n        if (changes.theme) {\n            const theme = changes.theme.currentValue || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        else if (!this.theme) {\n            const theme = this.service.config.theme ? this.service.config.theme : 'snow';\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        if (changes.content) {\n            const content = changes.content.currentValue;\n            const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : (this.service.config.sanitize || false);\n            this.innerHTML = sanitize ? content : this.sanitizer.bypassSecurityTrustHtml(content);\n        }\n    }\n}\nQuillViewHTMLComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: QuillViewHTMLComponent, deps: [{ token: DomSanitizer }, { token: QuillService }], target: i0.ɵɵFactoryTarget.Component });\nQuillViewHTMLComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.1\", type: QuillViewHTMLComponent, isStandalone: true, selector: \"quill-view-html\", inputs: { content: \"content\", theme: \"theme\", sanitize: \"sanitize\" }, usesOnChanges: true, ngImport: i0, template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`, isInline: true, styles: [\".ql-container.ngx-quill-view-html{border:0}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: QuillViewHTMLComponent, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, selector: 'quill-view-html', template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`, standalone: true, imports: [CommonModule], styles: [\".ql-container.ngx-quill-view-html{border:0}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i1.DomSanitizer, decorators: [{\n                    type: Inject,\n                    args: [DomSanitizer]\n                }] }, { type: QuillService }]; }, propDecorators: { content: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }] } });\n\nclass QuillViewComponent {\n    constructor(elementRef, renderer, zone, service, domSanitizer, platformId) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.service = service;\n        this.domSanitizer = domSanitizer;\n        this.platformId = platformId;\n        this.strict = true;\n        this.customModules = [];\n        this.customOptions = [];\n        this.preserveWhitespace = false;\n        this.onEditorCreated = new EventEmitter();\n        this.preserve = false;\n        this.quillSubscription = null;\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            let content = value;\n            if (format === 'text') {\n                quillEditor.setText(content);\n            }\n            else {\n                if (format === 'html') {\n                    const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : (this.service.config.sanitize || false);\n                    if (sanitize) {\n                        value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                    }\n                    content = quillEditor.clipboard.convert(value);\n                }\n                else if (format === 'json') {\n                    try {\n                        content = JSON.parse(value);\n                    }\n                    catch (e) {\n                        content = [{ insert: value }];\n                    }\n                }\n                quillEditor.setContents(content);\n            }\n        };\n    }\n    ngOnInit() {\n        this.preserve = this.preserveWhitespace;\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        if (changes.content) {\n            this.valueSetter(this.quillEditor, changes.content.currentValue);\n        }\n    }\n    ngAfterViewInit() {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        this.quillSubscription = this.service.getQuill().pipe(mergeMap((Quill) => {\n            const promises = [this.service.registerCustomModules(Quill, this.customModules)];\n            const beforeRender = this.beforeRender ?? this.service.config.beforeRender;\n            if (beforeRender) {\n                promises.push(beforeRender());\n            }\n            return Promise.all(promises).then(() => Quill);\n        })).subscribe(Quill => {\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            modules.toolbar = false;\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ?\n                    Object.assign({}, this.service.config.formats) : (this.service.config.formats === null ? null : undefined);\n            }\n            const theme = this.theme || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-view-element]');\n            this.zone.runOutsideAngular(() => {\n                this.quillEditor = new Quill(this.editorElem, {\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    readOnly: true,\n                    strict: this.strict,\n                    theme\n                });\n            });\n            this.renderer.addClass(this.editorElem, 'ngx-quill-view');\n            if (this.content) {\n                this.valueSetter(this.quillEditor, this.content);\n            }\n            // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n            // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n            if (!this.onEditorCreated.observers.length) {\n                return;\n            }\n            // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n            // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n            // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n            requestAnimationFrame(() => {\n                this.onEditorCreated.emit(this.quillEditor);\n                this.onEditorCreated.complete();\n            });\n        });\n    }\n    ngOnDestroy() {\n        this.quillSubscription?.unsubscribe();\n        this.quillSubscription = null;\n    }\n}\nQuillViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: QuillViewComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: QuillService }, { token: i1.DomSanitizer }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nQuillViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.1\", type: QuillViewComponent, isStandalone: true, selector: \"quill-view\", inputs: { format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", formats: \"formats\", sanitize: \"sanitize\", beforeRender: \"beforeRender\", strict: \"strict\", content: \"content\", customModules: \"customModules\", customOptions: \"customOptions\", preserveWhitespace: \"preserveWhitespace\" }, outputs: { onEditorCreated: \"onEditorCreated\" }, usesOnChanges: true, ngImport: i0, template: `\n<div quill-view-element *ngIf=\"!preserve\"></div>\n<pre quill-view-element *ngIf=\"preserve\"></pre>\n`, isInline: true, styles: [\".ql-container.ngx-quill-view{border:0}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: QuillViewComponent, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, selector: 'quill-view', template: `\n<div quill-view-element *ngIf=\"!preserve\"></div>\n<pre quill-view-element *ngIf=\"preserve\"></pre>\n`, standalone: true, imports: [CommonModule], styles: [\".ql-container.ngx-quill-view{border:0}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: QuillService }, { type: i1.DomSanitizer }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { format: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], modules: [{\n                type: Input\n            }], debug: [{\n                type: Input\n            }], formats: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }], beforeRender: [{\n                type: Input\n            }], strict: [{\n                type: Input\n            }], content: [{\n                type: Input\n            }], customModules: [{\n                type: Input\n            }], customOptions: [{\n                type: Input\n            }], preserveWhitespace: [{\n                type: Input\n            }], onEditorCreated: [{\n                type: Output\n            }] } });\n\nclass QuillModule {\n    static forRoot(config) {\n        return {\n            ngModule: QuillModule,\n            providers: [\n                {\n                    provide: QUILL_CONFIG_TOKEN,\n                    useValue: config\n                }\n            ]\n        };\n    }\n}\nQuillModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: QuillModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nQuillModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.1\", ngImport: i0, type: QuillModule, imports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent], exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent] });\nQuillModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: QuillModule, imports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: QuillModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n                    exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-quill\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QuillEditorBase, QuillEditorComponent, QuillModule, QuillService, QuillViewComponent, QuillViewHTMLComponent };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}